div[style="color: red"]
  = flash[:message]
#content_detail.ui-corner-all.ui-widget-content
  h1.title
    = t('page.showing', model: t('activerecord.models.item'))
  #content_list
    p#notice
      = notice
    - if @item.manifestation
      = render 'manifestations/title', manifestation: @item.manifestation
      - - end
      p
        strong
          = t('activerecord.attributes.item.item_identifier')
          | :
        = @item.item_identifier
      p
        strong
          = t('activerecord.attributes.item.binding_item_identifier')
          | :
        = @item.binding_item_identifier
      p
        strong
          = t('activerecord.models.shelf')
          | :
        = link_to(@item.shelf_display_name.localize, @item.shelf, id: "shelf_item_#{@item.id}")
        = render 'items/shelf_picture', item: @item
        |  (
        = link_to(@item.shelf.library.display_name.localize, @item.shelf.library, id: "library_item_#{@item.id}")
        | ) 
      - if defined?(EnjuCirculation)
        p
          strong
            = t('activerecord.attributes.item.checkout_type')
            | :
          = link_to @item.checkout_type.display_name.localize, @item.checkout_type
        p
          strong
            = t('activerecord.models.lending_policy')
            | :
        ul
          - @item.lending_policies.each do |lending_policy|
            li
              = link_to lending_policy.user_group.display_name.localize, lending_policy
            - - end
        p
          strong
            = t('activerecord.models.circulation_status')
            | :
          = link_to @item.circulation_status.display_name.localize, @item.circulation_status
          - if current_user.try(:has_role?, 'Librarian')
            - - unless @item.checkouts.not_returned.blank?
            |  (
            = link_to t('item.current_checkout'), @item.checkouts.not_returned.first
            | ) 
            - - end
            - - end
        p
          strong
            = t('activerecord.models.use_restriction')
            | :
          - if @item.use_restriction
            ul
              li
                = @item.use_restriction.display_name.localize
      p
        strong
          = t('activerecord.attributes.item.include_supplements')
          | :
        = localized_boolean(@item.include_supplements)
      p
        strong
          = t('activerecord.attributes.item.call_number')
          | :
        = @item.call_number
      p
        strong
          = t('activerecord.models.budget_type')
          | :
        = @item.budget_type.try(:display_name).try(:localize)
      p
        strong
          = t('activerecord.models.bookstore')
          | :
        = @item.bookstore.try(:name)
      p
        strong
          = t('activerecord.attributes.item.price')
          | :
        = @item.price
      p
        strong
          = t('activerecord.attributes.item.url')
          | :
        = @item.url
      p
        strong
          = t('activerecord.attributes.item.acquired_at')
          | :
        = l(@item.acquired_at, format: :only_date) if @item.acquired_at
      p
        strong
          = t('activerecord.attributes.item.binding_call_number')
          | :
        = @item.binding_call_number
      p
        strong
          = t('activerecord.attributes.item.binded_at')
          | :
        = l(@item.binded_at, format: :only_date) if @item.binded_at
      p
        strong
          = t('activerecord.attributes.item.note')
          | :
        = @item.note
      p
        strong
          = t('item.accepted_at')
          | :
        = l(@item.accept.created_at) if @item.accept
      p
        strong
          = t('page.created_at')
          | :
        = l(@item.created_at)
      p
        strong
          = t('page.updated_at')
          | :
        = l(@item.updated_at)
#submenu.ui-corner-all.ui-widget-content
  = render 'manifestations/book_jacket', manifestation: @item.manifestation
  ul
    li
      = back_to_index(flash[:page_info])
    - if policy(@item).update?
      li
        = link_to t('page.edit'), edit_item_path(@item)
    - if defined?(EnjuInterLibraryLoan)
      li
        = link_to t('page.listing', model: t('activerecord.models.inter_library_loan')), item_inter_library_loans_path(@item)
    - if policy(@item).destroy?
      li
        = link_to t('page.destroy'), @item, data: {confirm: t('page.are_you_sure')}, method: :delete
    - if defined?(EnjuInterLibraryLoan)
      - if @item.inter_library_loans.empty?
        li
          = link_to t('item.add_new_copy'), new_item_path(manifestation_id: @item.manifestation.id)
        - - end
      - if defined?(EnjuCirculation)
        li
          = link_to t('page.listing', model: t('activerecord.models.lending_policy')), lending_policies_path(item_id: @item.id)
        li
          = link_to t('page.checkout_history'), checkouts_path(item_id: @item.id)
- if policy(@item).update?
  = render 'tooltip', item: @item

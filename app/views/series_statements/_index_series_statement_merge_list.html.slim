.row
  #submenu.col-md-3
    ul
      li
        = link_to t('page.listing', model: t('activerecord.models.series_statement_merge_list')), @series_statement_merge_list
  #content_list.col-md-9
    h1.title
      = t('page.listing', model: t('activerecord.models.series_statement'))
    p#notice
      = notice
    .search_form
      = form_for :series_statements, url: series_statement_merge_list_series_statements_path(@series_statement_merge_list), html: {method: 'get'} do
        p
          = label_tag :search_form_top, t('page.search_term')
          | : 
          => search_field_tag 'query', h(@query), {id: 'search_form_top', class: 'search_form', placeholder: t('page.search_term')}
          - if policy(@series_statement_merge_list).update?
            = render 'page/add'
            = submit_tag t('page.search')
            = link_to t('page.back_to_index'), series_statement_merge_list_series_statements_path(@series_statement_merge_list)
    table.table.table-striped.index
      tr
        th
          = t('activerecord.attributes.series_statement.original_title')
        th
          = t('activerecord.attributes.series_statement.series_statement_identifier')
        th
      - @series_statements.each do |series_statement|
        |  <tr class="line
        = cycle("0", "1")
        | "> 
        td
          = link_to series_statement.original_title, series_statement_merge_list_series_statement_path(@series_statement_merge_list, series_statement)
        td
          = series_statement.series_statement_identifier
        td
          - if policy(series_statement_merge_list).destroy?
            - if params[:mode] == 'add'
              = link_to t('page.add'), new_series_statement_merge_list_series_statement_merge_path(@series_statement_merge_list, series_statement_id: series_statement.id) unless @series_statement_merge_list.series_statements.include?(series_statement)
            - else
              - series_statement_merge = @series_statement_merge_list.series_statement_merges.where(series_statement_id: series_statement.id).first
              = link_to t('page.destroy'), series_statement_merge_list_series_statement_merge_path(@series_statement_merge_list, series_statement_merge), data: {confirm: t('page.are_you_sure')}, method: :delete if series_statement_merge
    = paginate(@series_statements)

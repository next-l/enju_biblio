.row
  .col-md-9[itemscope="itemscope" itemtype="http://schema.org/Book"]
    .panel.panel-default
      .panel-heading
        = t('page.search_resource', model: t('page.resource'))
      .panel-body
        p#notice
          = notice
        = render 'manifestations/title', manifestation: @manifestation if @manifestation
        - case
        - when @index_agent[:creator]
          = render 'index_form_creator'
        - when @index_agent[:contributor]
          = render 'index_form_contributor'
        - when @index_agent[:publisher]
          = render 'index_form_publisher'
        - when @manifestation
          = render 'index_form_manifestation'
        - when @item
          = render 'index_form_item'
        - when @parent
          = render 'index_form_parent'
        - else
          = render 'index_form'
        = set_focus_on_search_form
        - if @parent
          = render 'show_parent'
        - if @manifestations.total_count > 0
          p
            = t('page.number_of_search_results', count: @count[:query_result], numdocs: Manifestation.search.total, seconds: sprintf("%.3f", @seconds))
            - if @count[:query_result] > @max_number_of_results
              br
              = t('page.limit_exceeded', count: @max_number_of_results)
          p
            = t('page.sort_by')
            | : 
            - if params[:sort_by].blank?
              strong
                = t('manifestation.date_of_acquisition')
            - else
              = link_to t('manifestation.date_of_acquisition'), url_for(params.merge(sort_by: nil, only_path: true))
              - if params[:sort_by] == 'pub_date'
                strong
                  = t('activerecord.attributes.manifestation.date_of_publication')
              - else
                = link_to t('activerecord.attributes.manifestation.date_of_publication'), url_for(params.merge(sort_by: 'pub_date', only_path: true))
                - if params[:sort_by] == 'title'
                  strong
                    = t('page.title')
                - else
                  = link_to t('page.title'), url_for(params.merge(sort_by: 'title', only_path: true))
          #list.autopagerize_page_element
            table#manifestation_list.table.table-striped
              = render @manifestations
            = paginate(@manifestations)
            br
          - if defined?(EnjuBookmark)
            #tag_cloud
              h3.resource_title
                = t('activerecord.models.tag')
              #tag_cloud_list
              = image_tag 'spinner.gif', id: 'spinner_tag_cloud', style: 'padding-bottom: 15px; padding-left: 40px;'
        - else
          = render 'manifestations/not_found'
          .autopagerize_insert_before
  #submenu.col-md-3
    .panel.panel-default
      .panel-body
        - if @parent and policy(@parent).update?
          = render 'submenu_parent'
        h3
          = link_to h("#{t('page.total')}: #{@count[:query_result]}"), url_for(params.merge(action: 'index', view: nil, carrier_type: nil, library: nil, language: nil, subject: nil, only_path: true))
        - if @manifestations.total_count > 0
          = render 'manifestations/all_facet'
          div
            - if params[:library_id].blank?
              = link_to((image_tag 'icons/feed.png', size: '16x16', alt: t('page.feed'), class: 'icon'), url_for(params.merge(format: :rss, page: nil, library_id: nil, only_path: true)))
              = link_to t('page.search_result_feed'), url_for(params.merge(format: :rss, page: nil, library_id: nil, commit: nil, only_path: true))
            - else
              = link_to((image_tag 'icons/feed.png', size: '16x16', alt: t('page.feed'), class: 'icon'), url_for(params.merge(format: :rss, page: nil, only_path: true)))
              = link_to t('page.search_result_feed'), url_for(params.merge(format: :rss, page: nil, commit: nil, only_path: true))
- if defined?(EnjuBookmark)
  script[type="text/javascript"]
    |  window.onload = function() { $("#tag_cloud_list").load('<ruby code="= url_for(params.merge(view: "tag_cloud", only_path: true))"></ruby>', hideTagCloudSpinner); } function hideTagCloudSpinner(){ $("#spinner_tag_cloud").hide(); } 
- if @manifestation_ids and @search_query
  = render 'session_ids'
